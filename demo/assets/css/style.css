@charset "UTF-8";
/*!
   ___                     _
  / __| __ __ _ _ __  _ __(_)
  \__ \/ _/ _` | '  \| '_ \ |
  |___/\__\__,_|_|_|_| .__/_|
                     |_|
  https://gitlab.com/pidila/scampi
*/
/*! v0.5.0 */
/*! Licence MIT ou CeCILL-B */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

body {
  margin: 0;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

[hidden],
template {
  display: none;
}

a {
  background-color: transparent;
}

a:active {
  outline: 0;
}

a:hover {
  outline: 0;
}

abbr[title] {
  border-bottom: 1px dotted;
}

b,
strong {
  font-weight: bold;
}

dfn {
  font-style: italic;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

mark {
  background: #ff0;
  color: #000;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

img {
  border: 0;
}

svg:not(:root) {
  overflow: hidden;
}

figure {
  margin: 1em 40px;
}

hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0;
}

pre {
  overflow: auto;
}

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}

button {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}

button[disabled],
html input[disabled] {
  cursor: default;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

input {
  line-height: normal;
}

input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 0;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

input[type="search"] {
  -webkit-appearance: textfield;
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
}

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

legend {
  border: 0;
  padding: 0;
}

textarea {
  overflow: auto;
}

optgroup {
  font-weight: bold;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

@-moz-viewport {
  width: device-width;
}

@-ms-viewport {
  width: device-width;
}

@-o-viewport {
  width: device-width;
}

@-webkit-viewport {
  width: device-width;
}

@viewport {
  width: device-width;
}

html {
  font-size: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

body {
  font-size: 1em;
  line-height: 1.5;
  color: #40403d;
  background-color: #fff;
}

[tabindex="-1"]:focus {
  outline: none !important;
}

[role="button"] {
  cursor: pointer;
}

button {
  -webkit-user-select: auto;
  -moz-user-select: auto;
  -ms-user-select: auto;
  user-select: auto;
}

a,
area,
button,
[role="button"],
input,
label,
select,
summary,
textarea {
  -ms-touch-action: manipulation;
      touch-action: manipulation;
}

[hidden] {
  display: none !important;
}

figure {
  margin: 0;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
}

address {
  margin-bottom: 1em;
  font-style: normal;
  line-height: inherit;
}

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  margin-top: 0;
  margin-bottom: 0.5em;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-weight: normal;
  line-height: 1.25;
  color: #40403d;
}

h1, .h1 {
  font-size: 2.5em;
}

h2, .h2 {
  font-size: 2em;
}

h3, .h3 {
  font-size: 1.75em;
}

h4, .h4 {
  font-size: 1.5em;
}

h5, .h5 {
  font-size: 1.25em;
}

h6, .h6 {
  font-size: 1em;
}

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1em;
}

ol,
ul {
  padding-left: 1em;
}

ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}

dt {
  font-weight: bold;
}

dd {
  margin-bottom: 0.5em;
  margin-left: 0;
}

p {
  margin-top: 0;
  margin-bottom: 1em;
}

hr {
  margin-top: 1em;
  margin-bottom: 1em;
  border: 0;
  border-top: 1px solid #d8d8d6;
}

a {
  color: #058857;
  text-decoration: underline;
}

a:focus, a:hover {
  color: #023e28;
  text-decoration: underline;
}

a:focus {
  outline: thin dotted;
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

abbr[title] {
  text-decoration: none;
}

mark,
.mark {
  padding: .2em;
  background-color: yellow;
}

small,
.small {
  font-size: 80%;
  font-weight: normal;
}

q {
  quotes: "\201C" "\201D" "\2018" "\2019";
}

:lang(fr) > q {
  quotes: "\00AB\A0" "\A0\00BB" "\201C" "\201D" "\2018" "\2019";
}

:lang(en) > q {
  quotes: "\201C" "\201D" "\2018" "\2019";
}

:lang(es) > q {
  quotes: "\00AB" "\00BB" "\201C" "\201D";
}

:lang(it) > q {
  quotes: "\00AB\A0" "\A0\00BB" "\201C" "\201D";
}

:lang(de) > q {
  quotes: "\201e" "\201c" "\201a" "\2018";
}

q:before {
  content: open-quote;
}

q:after {
  content: close-quote;
}

code,
kbd,
pre,
samp {
  font-family: Menlo, Monaco, Consolas, "Courier New", monospace;
}

pre {
  display: block;
  margin-top: 0;
  margin-bottom: 1em;
  font-size: 90%;
  line-height: 1.5;
  color: #676762;
  background-color: #f7f7f9;
}

pre code {
  padding: 0;
  font-size: inherit;
  color: inherit;
  border-radius: 0;
}

code {
  padding: .2em .4em;
  font-size: 90%;
  color: #058857;
  background-color: #f7f7f9;
  border-radius: 4px;
}

kbd {
  padding: .2em .4em;
  font-size: 90%;
  color: #fff;
  background-color: #333;
  border-radius: 3px;
}

kbd kbd {
  padding: 0;
  font-size: 100%;
  font-weight: bold;
}

.browsehappy {
  padding-top: .5em;
  padding-bottom: .5em;
  background-color: #fcf8e3;
  border-bottom: 1px solid #faf2cc;
}

.browsehappy p {
  margin-bottom: 0.5em;
}

.browsehappy a {
  color: #058857;
  text-decoration: underline;
}

.btn {
  display: inline-block;
  font-weight: normal;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  border: 1px solid transparent;
  color: #4d4d49;
  background-color: #e5e5e3;
  border-color: #ccccc9;
  padding: 0.25rem 1rem;
  font-size: 1em;
  line-height: 1.5;
  border-radius: 3px;
}

.btn:hover {
  color: #4d4d49;
  background-color: #d2d2d0;
  border-color: #a7a7a2;
}

.btn:focus, .btn.focus {
  background-color: #d2d2d0;
  -webkit-box-shadow: 0 0 0 0.2rem rgba(204, 204, 201, 0.5);
          box-shadow: 0 0 0 0.2rem rgba(204, 204, 201, 0.5);
}

.btn.disabled, .btn:disabled {
  color: #4d4d49;
  background-color: #e5e5e3;
  border-color: #ccccc9;
}

.btn:not(:disabled):not(.disabled):active, .btn:not(:disabled):not(.disabled).active,
.show > .btn.dropdown-toggle {
  color: #4d4d49;
  background-color: #ccccc9;
  border-color: #adada8;
}

.btn:not(:disabled):not(.disabled):active:focus, .btn:not(:disabled):not(.disabled).active:focus,
.show > .btn.dropdown-toggle:focus {
  background-color: #d2d2d0;
  -webkit-box-shadow: 0 0 0 0.2rem rgba(204, 204, 201, 0.5);
          box-shadow: 0 0 0 0.2rem rgba(204, 204, 201, 0.5);
}

.btn:focus, .btn:hover {
  text-decoration: none;
}

.btn:focus, .btn.focus {
  outline: 0;
  -webkit-box-shadow: 0 0 0 0.2rem rgba(5, 136, 87, 0.25);
          box-shadow: 0 0 0 0.2rem rgba(5, 136, 87, 0.25);
}

.btn.disabled, .btn:disabled {
  opacity: 0.65;
}

.btn:not(:disabled):not(.disabled) {
  cursor: pointer;
}

.btn:not(:disabled):not(.disabled):active, .btn:not(:disabled):not(.disabled).active {
  background-image: none;
}

.btn-primary {
  color: #fff;
  background-color: #058857;
  border-color: #035738;
}

.btn-primary:hover {
  color: #fff;
  background-color: #04633f;
  border-color: #000d08;
}

.btn-primary:focus, .btn-primary.focus {
  background-color: #04633f;
  -webkit-box-shadow: 0 0 0 0.2rem rgba(3, 87, 56, 0.5);
          box-shadow: 0 0 0 0.2rem rgba(3, 87, 56, 0.5);
}

.btn-primary.disabled, .btn-primary:disabled {
  color: #fff;
  background-color: #058857;
  border-color: #035738;
}

.btn-primary:not(:disabled):not(.disabled):active, .btn-primary:not(:disabled):not(.disabled).active,
.show > .btn-primary.dropdown-toggle {
  color: #fff;
  background-color: #035738;
  border-color: #011910;
}

.btn-primary:not(:disabled):not(.disabled):active:focus, .btn-primary:not(:disabled):not(.disabled).active:focus,
.show > .btn-primary.dropdown-toggle:focus {
  background-color: #04633f;
  -webkit-box-shadow: 0 0 0 0.2rem rgba(3, 87, 56, 0.5);
          box-shadow: 0 0 0 0.2rem rgba(3, 87, 56, 0.5);
}

.btn-secondary {
  color: #4d4d49;
  background-color: #fff;
  border-color: #ccccc9;
}

.btn-secondary:hover {
  color: #4d4d49;
  background-color: #ececec;
  border-color: #a7a7a2;
}

.btn-secondary:focus, .btn-secondary.focus {
  background-color: #ececec;
  -webkit-box-shadow: 0 0 0 0.2rem rgba(204, 204, 201, 0.5);
          box-shadow: 0 0 0 0.2rem rgba(204, 204, 201, 0.5);
}

.btn-secondary.disabled, .btn-secondary:disabled {
  color: #4d4d49;
  background-color: #fff;
  border-color: #ccccc9;
}

.btn-secondary:not(:disabled):not(.disabled):active, .btn-secondary:not(:disabled):not(.disabled).active,
.show > .btn-secondary.dropdown-toggle {
  color: #4d4d49;
  background-color: #e6e6e6;
  border-color: #adada8;
}

.btn-secondary:not(:disabled):not(.disabled):active:focus, .btn-secondary:not(:disabled):not(.disabled).active:focus,
.show > .btn-secondary.dropdown-toggle:focus {
  background-color: #ececec;
  -webkit-box-shadow: 0 0 0 0.2rem rgba(204, 204, 201, 0.5);
          box-shadow: 0 0 0 0.2rem rgba(204, 204, 201, 0.5);
}

a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}

.form-control {
  display: block;
  width: 100%;
  padding: 0.5em 0.75em;
  font-size: 1em;
  line-height: 1.5;
  color: #4d4d49;
  background-color: #fff;
  background-clip: padding-box;
  border: 1px solid #ccc;
  border-radius: 4px;
}

.form-control::-ms-expand {
  background-color: transparent;
  border: 0;
}

.form-control:focus {
  color: #4d4d49;
  background-color: #fff;
  border-color: #16f6a3;
  outline: 0;
  -webkit-box-shadow: 0 0 0 1px rgba(5, 136, 87, 0.25);
          box-shadow: 0 0 0 1px rgba(5, 136, 87, 0.25);
}

.form-control::-webkit-input-placeholder {
  color: #999;
  opacity: 1;
}

.form-control::-moz-placeholder {
  color: #999;
  opacity: 1;
}

.form-control:-ms-input-placeholder {
  color: #999;
  opacity: 1;
}

.form-control::-ms-input-placeholder {
  color: #999;
  opacity: 1;
}

.form-control::placeholder {
  color: #999;
  opacity: 1;
}

.form-control:disabled, .form-control[readonly] {
  background-color: #e5e5e3;
  opacity: 1;
}

select.form-control:not([size]):not([multiple]) {
  height: 2.5em;
}

select.form-control:focus::-ms-value {
  color: #4d4d49;
  background-color: #fff;
}

.form-control-file,
.form-control-range {
  display: block;
  width: 100%;
}

.symbol-required {
  color: #a94442;
}

.form-group {
  margin-bottom: 1em;
}

.form-text {
  display: block;
  margin-top: 0.25em;
}

.form-check {
  position: relative;
  display: block;
  padding-left: 1.25em;
}

.form-check-input {
  position: absolute;
  margin-top: 0.3em;
  margin-left: -1.25em;
}

.form-check-input:disabled ~ .form-check-label {
  color: #81817b;
}

.form-check-label {
  margin-bottom: 0;
}

.form-check-inline {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding-left: 0;
  margin-right: 0.75em;
}

.form-check-inline .form-check-input {
  position: static;
  margin-top: 0;
  margin-right: 0.3125em;
  margin-left: 0;
}

.svg-icon {
  width: .875em;
  height: .875em;
  display: inline-block;
  vertical-align: middle;
  fill: currentColor;
  margin-top: -.15em;
}

a .svg-icon {
  text-decoration: none;
}

.scampi-stuff {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  height: 100vh;
}

.scampi-stuff .banner .container {
  padding: .25em .5em;
  color: white;
  background: #058857 url(../img/modulaire.svg) no-repeat 0.5em 0.25em;
  background-size: 36px auto;
}

@media screen and (min-width: 48em) {
  .scampi-stuff .banner .container {
    padding: .75em 2em .5em 8em;
    background-position: 2em .5em;
    background-size: 4.5em auto;
  }
}

.scampi-stuff .banner .banner-title {
  margin-bottom: 0;
  padding-left: 42px;
  color: white;
  font-size: 2em;
}

@media screen and (min-width: 48em) {
  .scampi-stuff .banner .banner-title {
    padding-left: 0;
  }
}

.scampi-stuff .banner .baseline {
  margin-bottom: .25em;
}

.scampi-stuff .main {
  -webkit-box-flex: 1;
      -ms-flex: 1 0 auto;
          flex: 1 0 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  min-height: 60px;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.scampi-stuff .main-container {
  max-width: 48em;
}

.scampi-stuff h2 {
  font-size: 1.5em;
}

@media screen and (min-width: 48em) {
  .scampi-stuff h2 {
    margin-top: 1.25em;
  }
}

.scampi-stuff h3 {
  font-size: 1.125em;
  font-weight: bold;
}

@media screen and (min-width: 48em) {
  .scampi-stuff h3 {
    margin-top: 1.5em;
  }
}

.scampi-stuff .pidila-footer {
  padding: .25em .5em;
  border-top: 1px solid #058857;
  font-size: .875em;
}

@media screen and (min-width: 48em) {
  .scampi-stuff .pidila-footer {
    padding: .5em 2em;
  }
}

@media screen and (min-width: 48em) {
  .scampi-stuff .pidila-footer .container {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
}

@media screen and (min-width: 48em) {
  .scampi-stuff .pidila-footer .footer-content {
    -webkit-box-flex: 1;
        -ms-flex: 1 1 100%;
            flex: 1 1 100%;
    padding-right: 2em;
  }
}

.scampi-stuff .pidila-footer p {
  margin: .25em 0;
}

.scampi-stuff .pidila-footer .svg-icon {
  width: 1.5em;
  height: 1.5em;
  vertical-align: bottom;
}

.scampi-stuff .pidila-logo {
  text-align: center;
}

.scampi-stuff .pidila-logo a {
  display: block;
}

.scampi-stuff .pidila-logo a .svg-logo {
  display: inline-block;
  vertical-align: middle;
}

.scampi-stuff form {
  padding: .5em 1em 1em;
  border: 1px solid #d8d8d6;
}

@media screen and (min-width: 48em) {
  .scampi-stuff form {
    margin-top: 2em;
    margin-bottom: 2em;
  }
}

.scampi-stuff .form-buttons {
  text-align: right;
}

.scampi-stuff .btn {
  -webkit-box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.1);
          box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.1);
}

.scampi-stuff .btn:hover, .scampi-stuff .btn:focus {
  -webkit-box-shadow: none;
          box-shadow: none;
}

.scampi-stuff .icon-select::before {
  color: #058857;
}

/* if you use Scampi (https://gitlab.com/pidila/scampi),
you don't need this first part */
button,
input,
label,
select {
  font-size: 1em;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  border: 0;
  white-space: nowrap;
}

/* select-a11y
------------------------------------------------------ */
.select-a11y {
  position: relative;
}

.select-a11y .btn-select-a11y {
  position: relative;
  width: 100%;
  text-align: left;
  background-color: #e5e5e3;
}

.select-a11y .btn-select-a11y .icon-select {
  position: absolute;
  background-color: red;
  top: 50%;
  right: 0.5em;
  line-height: 0;
}

.select-a11y .btn-select-a11y .icon-select::before {
  content: "▼";
}

.select-a11y .btn-select-a11y[aria-expanded="true"] {
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}

.select-a11y .btn-select-a11y[aria-expanded="true"] .icon-select {
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.select-a11y .tag-item {
  border: 1px solid #ccccc9;
  padding: .2em .1em .2em 0.5em;
}

.select-a11y .tag-item-supp {
  background-color: transparent;
  border: 1px solid transparent;
}

.select-a11y .tag-item-supp .icon-delete:before {
  content: "✕";
  color: red;
  line-height: 1;
}

.select-a11y .tag-item-supp:focus {
  outline: 1px solid red;
  color: red;
}

.select-a11y .tag-item-supp:hover {
  color: red;
  border-color: red;
}

.select-a11y .tag-hidden {
  display: none;
}

.select-a11y.is-open .a11y-container {
  display: block;
}

.select-a11y .a11y-container {
  position: absolute;
  left: 0;
  right: 0;
  padding: 0.5em;
  background: #f1f1f0;
  z-index: 10;
  border: 1px solid #e5e5e3;
}

.select-a11y input::-webkit-contacts-auto-fill-button {
  visibility: hidden;
  display: none !important;
  pointer-events: none;
  position: absolute;
  right: 0;
}

.select-a11y .a11y-suggestions {
  max-height: 10em;
  overflow-y: auto;
  border: 1px solid #676762;
  margin-top: 0.5em;
  background-color: #fff;
}

.select-a11y .a11y-suggestion {
  padding: 0 0.5em;
  color: #676762;
  cursor: pointer;
  text-align: left;
}

.select-a11y .a11y-suggestion:focus, .select-a11y .a11y-suggestion:hover {
  color: #40403d;
  background-color: #e5e5e3;
}

.select-a11y .a11y-suggestion:focus {
  outline: 1px dotted #40403d !important;
  outline-offset: -1px;
}

.select-a11y .a11y-suggestion[aria-selected="true"] {
  background-color: #ccccc9;
  color: #40403d;
}

.select-a11y .a11y-no-suggestion {
  padding: 0 0.5em;
  color: #676762;
  text-align: left;
  margin: 0;
}

.select-a11y .list-selected {
  padding: 0.5em 0;
  margin: 0;
}

.select-a11y .list-selected li {
  margin: 0 0.3em 0.3em 0;
}

.select-a11y .list-selected li:before {
  content: "";
}

.select-a11y .list-selected li span {
  display: inline-block;
}

.clearfix::after {
  content: "";
  display: table;
  clear: both;
}

.center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.container {
  display: block;
  margin-left: auto;
  margin-right: auto;
  padding-left: 0.5em;
  padding-right: 0.5em;
}

.container::after {
  content: "";
  display: table;
  clear: both;
}

.list-unstyled {
  padding-left: 0;
  list-style: none;
}

.list-inline {
  padding-left: 0;
  list-style: none;
}

.list-inline > li {
  display: inline-block;
}

.list-inline > li:not(:last-child) {
  margin-right: 0.25em;
}

.list-inline-item {
  display: inline-block;
}

.list-inline-item:not(:last-child) {
  margin-right: 0.25em;
}

.lead {
  font-size: 1.25em;
  font-weight: normal;
}

.text-nowrap {
  white-space: nowrap !important;
}

.text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.text-muted {
  color: #81817b;
}

.initialism {
  font-size: 90%;
  text-transform: uppercase;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  border: 0;
  white-space: nowrap;
}

.sr-only-focusable:active, .sr-only-focusable:focus {
  position: static;
  width: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  clip: auto;
  -webkit-clip-path: none;
  clip-path: none;
  white-space: normal;
}

.img-fluid {
  display: block;
  max-width: 100%;
  height: auto;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
